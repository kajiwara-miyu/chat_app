#openapi

openapi: 3.0.0
info:
  title: Chat API
  version: 1.0.0

paths:
  /signup:
    post:
      summary: ユーザー登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '200':
          description: 登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /login:
    post:
      summary: ログイン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /users:
    get:
      summary: ユーザー一覧取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'

  /messages:
    get:
      summary: メッセージ取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'

    post:
      summary: メッセージ送信
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: 送信成功

  /chat_rooms:
    get:
      summary: 自分が所属するチャットルーム一覧取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatRoomResponse'

    post:
      summary: チャットルーム作成（グループトーク用）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatRoomRequest'
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomResponse'

    /chat_rooms/{roomId}/messages:
    get:
      summary: 指定ルームのメッセージ取得
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'

    post:
      summary: 指定ルームにメッセージ送信
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMessageRequest'
      responses:
        '200':
          description: 送信成功

  paths:
  /chat_rooms/{roomId}/members:
    post:
      summary: チャットルームにメンバー追加
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMemberRequest'
      responses:
        '200':
          description: 追加成功

  /chat_rooms/{roomId}/members/{userId}:
    delete:
      summary: チャットルームからメンバー削除
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 削除成功

components:
  schemas:
    SignupRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string

    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string

    UserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string

    Message:
      type: object
      required: [senderId, recipientId, content]
      properties:
        id:
          type: integer
        senderId:
          type: integer
        recipientId:
          type: integer
        content:
           type: string
        timestamp:
           type: string
        format: date-time

    CreateChatRoomRequest:
      type: object
      required: [roomName, memberIds]
      properties:
        roomName:
          type: string
        memberIds:
          type: array
          items:
            type: integer

    ChatRoomResponse:
      type: object
      properties:
        id:
          type: integer
        roomName:
          type: string
        isGroup:
          type: boolean
        memberIds:
          type: array
          items:
            type: integer

    PostMessageRequest:
      type: object
      required: [content]
      properties:
        content:
          type: string
        threadRootId:
          type: integer
          nullable: true

    AddMemberRequest:
      type: object
      required: [userId]
      properties:
        userId:
          type: integer
